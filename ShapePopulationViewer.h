#ifndef SHAPEPOPULATIONVIEWER_H
#define SHAPEPOPULATIONVIEWER_H

#include <QMainWindow>
#include "ui_ShapePopulationViewer.h"
#include <QDir>
#include <QVector>
#include "QVTKWidget.h"
#include "vtkPolyData.h"
#include "vtkPolyDataMapper.h"
#include "vtkScalarBarActor.h"
#include <QResizeEvent>
#include <QEvent>
#include <QSize>
#include <QString>

/**
 * ShapePopulationViewer Gui class specification.  This class contains all model data and controller callbacks, if we are going to consider the code within the MVC paradigm.  See
 * ui_ShapePopulationViewer.h for information on the construction of the gui itself.  That is an autogenerated file from the ShapePopulationViewer.ui file, which could also be used as reference.
 * @brief The ShapePopulationViewer class
 * @author Michael Guarino
 */
class ShapePopulationViewer : public QMainWindow, public Ui::ShapePopulationViewer
{
  Q_OBJECT
public:
  // Constructor/Destructor
  ShapePopulationViewer();
  ~ShapePopulationViewer() {}
public slots:

  virtual void slotExit();

protected:
   void ModifiedHandler();
   void resizeEvent(QResizeEvent* event);
   bool synced;
   QDir directory;
   QVector<QVTKWidget *> *widgetList;
   QVector<vtkPolyData *> *polyList;
   QVector<vtkPolyDataMapper *> *mapperList;
   QVector<QString> *colorMaps;
   QSize scrollAreaSize;
   QString cmap;
   double* coords;
   double distance;
   int prevCols;
   int prevRows;
   int phi;
   double PI;
   int loaded;
   int sequence;
   void updateWidgets();
   void updateCMaps();
protected slots:
   void on_checkBox_9_toggled(bool checked);
   void flipMeshes();
   void writeMeshes();
   void openVTKS();
   void on_checkBox_10_toggled(bool checked);
   void on_lineEdit_editingFinished();
   void on_checkBox_3_toggled(bool checked);
   void on_comboBox_currentIndexChanged(const QString &arg1);
   void on_toolButton_clicked();
   void on_toolButton_2_clicked();
   void on_toolButton_3_clicked();
   void on_toolButton_4_clicked();
   void on_toolButton_5_clicked();
   void on_toolButton_6_clicked();
   void viewChange(int x, int y, int z);
};

#endif
